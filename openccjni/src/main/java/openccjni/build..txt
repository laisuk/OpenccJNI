gcc -o use_math_c use_math_c.c -I include -L . -l math
g++ -o use_math_cpp use_math_cpp.cpp -I . -L. -lmath

gcc -o use_math_c use_math_c.c -I . -L . -l opencc_fmmseg_capi
g++ -o use_math_cpp use_math_cpp.cpp -I . -L. -lopencc_fmmseg_capi

gcc -o use_opencc_fmmseg_c use_opencc_fmmseg_c.c -I . -L . -l opencc_fmmseg_capi
g++ -o use_opencc_fmmseg_cpp use_opencc_fmmseg_cpp.cpp -I . -L. -lZho_fmmseg_capi

==============
Java: (Old)
javac ZhoWrapper.java
javah -jni ZhoWrapper

(javah is removed in the latest JDK. Before JDK 8, you need to compile the Java program using javac and generate C/C++ header using a dedicated javah utility. The javah utility is no longer available in JDK 10.
For those who are using the latest JDK, the javac -h command will compile and create a header file.)

(New)
javac -h . ZhoWrapper.java
javac -h . OpenccWrapper.java

g++ -shared -o ZhoWrapper.dll ZhoWrapper.cpp -I<path_to_jni_include> -I<path_to_java_include> -L<path_to_cpp_dll> -lopencc_fmmseg_capi
Windows:
g++ -shared -o ZhoWrapper.dll ZhoWrapper.cpp -I . -I "C:\Program Files\Java\jdk-17\include\" -I "C:\Program Files\Java\jdk-17\include\win32" -L. -lopencc_fmmseg_capi
g++ -shared -o OpenccWrapper.dll OpenccWrapper.cpp -I . -I "C:\Program Files\Java\jdk-21\include\" -I "C:\Program Files\Java\jdk-21\include\win32" -L. -lopencc_fmmseg_capi
Linux:
g++ -shared -o libZhoWrapper.so ZhoWrapper.cpp -I . -I "/home/bryan/.jdks/corretto-21.0.2/include/" -I "/home/bryan/.jdks/corretto-21.0.2/include/linux" -L. -lopencc_fmmseg_capi -Wl,-rpath='$ORIGIN'
g++ -shared -o libOpenccWrapper.so OpenccWrapper.cpp -I . -I "/home/bryan/.jdks/graalvm-jdk-21.0.6/include/" -I "/home/bryan/.jdks/graalvm-jdk-21.0.6/include/linux" -L. -lopencc_fmmseg_capi -Wl,-rpath='$ORIGIN'
macOS:
g++ -shared -o libZhoWrapper.dylib ZhoWrapper.cpp -I . -I "/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/include/" -I "/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/include/darwin" -L. -lopencc_fmmseg_capi -Wl,-rpath='$ORIGIN'


javac -encoding UTF-8 ZhoWrapper.java
javac -encoding UTF-8 OpenccWrapper.java

javac -encoding UTF-8 UseZhoWrapper.java

java UseZhoWrapper

===== Jar ======
javac ZhoWrapper.java  # Compile the Java class
jar cvf ZhoWrapper.jar ZhoWrapper.class  # Create a JAR file containing the class

& "C:\Program Files\Java\jdk-17\bin\jar.exe" cvf ZhoWrapper.jar ZhoWrapper.class

======= Run with Package =====
cd to Package root: in folder \openccwrapper, cd .. to root
copy ZhoWrapper.dll, opencc_fmmseg_capi.dll to root (or to java.library.path)
(ZhoWrapper.class can be at the same folder of UseOpenCCWrapper.java)

run from root: (Linux not work, have to copy libxxxxx.so to java.library.path)
java openccwrapper/UseOpenCCWrapper

=============
OpenccWrapper (New Method)
=============
Edit OpenccWrapper.java
javac -h . OpenccWrapper.java
=> opencc_OpenccWrapper.h
Edit OpenccWrapper.cpp

== Windows ==
g++ -shared -o OpenccWrapper.dll OpenccWrapper.cpp -I . -I "C:\Program Files\Java\jdk-21\include\" -I "C:\Program Files\Java\jdk-21\include\win32" -L. -lopencc_fmmseg_capi
g++ -shared `
  -o OpenccWrapper.dll OpenccWrapper.cpp `
  -I. `
  -I"C:\Program Files\Java\jdk-21\include" `
  -I"C:\Program Files\Java\jdk-21\include\win32" `
  -L. -lopencc_fmmseg_capi `
  -static-libstdc++ -static-libgcc `
  -s

=> OpenccWrapper.dll
Copy OpenccWrapper.dll, opencc_fmmseg_capi.dll to project root

== Linux ==
g++ -shared -o libOpenccWrapper.so OpenccWrapper.cpp -I . -I "/home/bryan/.jdks/graalvm-jdk-21.0.8/include/" -I "/home/bryan/.jdks/graalvm-jdk-21.0.8/include/linux" -L. -lopencc_fmmseg_capi -Wl,-rpath='$ORIGIN'
# from repo root
javac -h . openccjni/src/main/java/openccjni/OpenccWrapper.java  # (once, to refresh JNI header)

g++ -shared -fPIC -O2 -std=c++17 \
  -o openccjni/src/main/resources/openccjni/natives/linux-x86_64/libOpenccWrapper.so \
  openccjni/src/main/java/openccjni/OpenccWrapper.cpp \
  -I openccjni/src/main/java/openccjni \
  -I "/home/bryan/.jdks/graalvm-jdk-21.0.8/include" \
  -I "/home/bryan/.jdks/graalvm-jdk-21.0.8/include/linux" \
  -L openccjni/src/main/resources/openccjni/natives/linux-x86_64 \
  -lopencc_fmmseg_capi \
  -Wl,-rpath,'$ORIGIN' -Wl,--enable-new-dtags

=> libOpenccWrapper.so
Copy libOpenccWrapper.so, libopencc_fmmseg_capi.so to /usr/java/packages/lib/

== macOS ==
clang++ -dynamiclib \
  -o libOpenccWrapper.dylib OpenccWrapper.cpp \
  -I. \
  -I"/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/include" \
  -I"/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/include/darwin" \
  -L. -lopencc_fmmseg_capi \
  -Wl,-rpath,@loader_path \
  -Wl,-install_name,@rpath/libOpenccWrapper.dylib
